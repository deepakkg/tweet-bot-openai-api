name: tweet-bot

on:
  workflow_dispatch: {}          # lets you run it manually
  schedule:                      # runs automatically (UTC time)
    # 09:15 IST == 03:45 UTC; 17:15 IST == 11:45 UTC
    - cron: '45 3 * * *'
    - cron: '45 11 * * *'

jobs:
  tweet:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: tweet-bot
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Optional jitter (avoid exact minute posts)
        env:
          JITTER_MAX: 120
        run: |
          python - <<'PY'
          import os, random, time
          s = random.randint(0, int(os.getenv("JITTER_MAX","0")))
          print(f"Jittering {s}s...")
          time.sleep(s)
          PY

      - name: Run bot (single post)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

          # Safe defaults as repository Variables (not secrets)
          DRY_RUN: ${{ vars.DRY_RUN || 'true' }}     # start in dry mode
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL || 'gpt-4o-mini' }}
          MAX_RETRIES: ${{ vars.MAX_RETRIES || '6' }}
          TWEET_TOPICS: ${{ vars.TWEET_TOPICS || '' }}
          OPENAI_USE_MODERATION: "true"
          RUN_ONCE: "true"    # run just once per workflow run
        run: python twitter_bot.py
